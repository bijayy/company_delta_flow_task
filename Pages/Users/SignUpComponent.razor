@page "/user/signup";
@layout NoMenuLayout
@inherits SignUpComponentBase;

<HourGlassTemplate IsShow="this.IsInProgress" />

<FormTemplate Title="Sign Up"
			  Model="@this.signUpViewModel"
			  SubmitButtonTitle="Please click here to sign up in to this portal."
			  SubmitButtonText="Sign Up"
			  CancelButtonText="Sign In"
			  CancelButtonTitle="Existing user. Please click here to sign in."
			  ShowCancelButton="true"
			  OnValidSubmit="this.SignUpAsync"
			  OnCancelClicked="this.CancelAsync">
	<Messages>
		<MessageTemplate IsSucess="this.IsSuccess || SignUpStatus.EmailNotSent == status"
						 Success="Registration successful. Please check your email and verify first to sing in."
						 IsEmailNotSent="SignUpStatus.EmailNotSent == status"
						 SendEmail="this.SendEmail"
						 IsError="(!this.IsSuccess && this.signUpViewModel == null)"
						 IsInfo="this.IsExists">
			@(this.IsExists ? signUpViewModel.Email : signUpViewModel.FullName)
		</MessageTemplate>
	</Messages>
	<Content>
		<div class="col-md-4 offset-md-4">
			<p class="form-group" title="Enter Full Name">
				<label for="@signUpViewModel.FullName">Full Name<span style="color:red">*</span>: </label>
				<input type="text" id="@signUpViewModel.FullName" placeholder="Enter Full Name" class="form-control" @bind-value="signUpViewModel.FullName" />
				<ValidationMessage For="@(() => signUpViewModel.FullName)"></ValidationMessage>
			</p>
			<p class="form-group" title="Enter Email">
				<label for="@signUpViewModel.Email">Emails<span style="color:red">*</span>: </label>
				<input type="text" id="@signUpViewModel.Email" placeholder="Enter Emails" class="form-control" @bind-value="signUpViewModel.Email" />
				<ValidationMessage For="@(() => signUpViewModel.Email)"></ValidationMessage>
			</p>
			<p class="form-group" title="Enter Gender">
				<label for="@signUpViewModel.Genders">Gender<span style="color:red">*</span>: </label>
				<select @onchange="@(e => OnChange(e.Value.ToString()))" class="form-control">
					@foreach (string gender in signUpViewModel.Genders)
					{
						<option value="@gender">@gender</option>
					}
				</select>
				<ValidationMessage For="@(() => signUpViewModel.Email)"></ValidationMessage>
			</p>
			<p class="form-group" title="Enter Password">
				<label for="@signUpViewModel.Email">Password<span style="color:red">*</span>: </label>
				<input type="password" id="@signUpViewModel.Password" placeholder="Enter Password" class="form-control" @bind-value="signUpViewModel.Password" />
				<ValidationMessage For="@(() => signUpViewModel.Password)"></ValidationMessage>
			</p>
			<p class="form-group" title="Enter Confirm Password">
				<label for="@signUpViewModel.ConfirmPassword">Confirm Password<span style="color:red">*</span>: </label>
				<input type="password" id="@signUpViewModel.ConfirmPassword" placeholder="Enter Confirm Password" class="form-control" @bind-value="signUpViewModel.ConfirmPassword" />
				<ValidationMessage For="@(() => signUpViewModel.ConfirmPassword)"></ValidationMessage>
			</p>
		</div>
	</Content>
</FormTemplate>
